name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: Man8244251
          MYSQL_DATABASE: messaging_db
          MYSQL_USER: root
          MYSQL_PASSWORD: Man8244251
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -uroot -pMan8244251"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    env:
      MYSQL_ROOT_PASSWORD: Man8244251
      MYSQL_DATABASE: messaging_db
      MYSQL_USER: root
      MYSQL_PASSWORD: Man8244251
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DJANGO_SETTINGS_MODULE: messaging_app.settings
      PYTHONPATH: .

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r messaging_app/requirements.txt
          pip install pytest pytest-django mysqlclient flake8 coverage

      - name: Run flake8 (linting)
        run: |
          echo "Running flake8 linting..."
          flake8 messaging_app --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 messaging_app --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

      - name: Run migrations
        run: |
          python messaging_app/manage.py migrate

      - name: Run tests with coverage
        run: |
          coverage run -m pytest messaging_app/ --maxfail=1 --disable-warnings -q
          coverage report -m
          coverage xml

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.xml
